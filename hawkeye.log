[info] Version: v1.8.1
[info] Target for scan: /target
[info] scanning all files in target directory
[info] Excluded 0 files with patterns: /^node_modules\//, /^.git\//, /^package-lock.json/
[info] Checking files-ccnumber for applicability
[info] Checking files-contents for applicability
[info] Checking files-secrets for applicability
[info] Checking java-find-secbugs for applicability
[info] Checking java-outdated-dependencies for applicability
[info] Checking java-owasp for applicability
[info] Checking node-npmaudit for applicability
[info] Checking node-npmoutdated for applicability
[info] Checking node-yarnaudit for applicability
[info] Checking node-yarnoutdated for applicability
[info] Checking php-security-checker for applicability
[info] Checking python-bandit for applicability
[info] Checking python-piprot for applicability
[info] Checking python-safety for applicability
[info] Checking ruby-brakeman for applicability
[info] Checking ruby-bundler-scan for applicability
[info] Checking rust-cargoaudit for applicability
[info] Skipping module java-find-secbugs
[info] Skipping module java-outdated-dependencies
[info] Skipping module java-owasp
[info] Skipping module node-npmaudit
[info] Skipping module node-npmoutdated
[info] Skipping module node-yarnaudit
[info] Skipping module node-yarnoutdated
[info] Skipping module php-security-checker
[info] Skipping module ruby-brakeman
[info] Skipping module ruby-bundler-scan
[info] Skipping module rust-cargoaudit
[info] Running module files-ccnumber
[info] Running module files-contents
[info] Running module files-secrets
[info] Running module python-bandit
[info] Running module python-piprot
[info] Running module python-safety
[info] Scan complete, 8 issues found
[info] Writing to: writer-console
module          level     offender           descriptionmitigation                                                           

files-contents  low       config.py          Potential password in fileheck line number: 1                                                 
python-safety   critical  flask 0.12         Flask 0.12.3 includes a fix for CVE-2019-1010083: Unexpected memory usage. The impact is denial of service. The attack vector is crafted encoded JSON data. NOTE: this may overlap CVE-2018-1000656.
https://github.com/pallets/flask/pull/2695/commits/0e1e9a04aaf29ab78f721cfc79ac2a691f6eersions <0.12.3 are vulnerable. Update to a non vulnerable version. 
python-safety   critical  flask 0.12         flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed inersions <0.12.3 are vulnerable. Update to a non vulnerable version. 
python-safety   critical  sqlalchemy 1.4.23  Sqlalchemy 2.0.0b1 avoids leaking cleartext passwords to the open for careless uses of str(engine.URL()) in logs and prints.
https://github.com/sqlalchemy/sqlalchemy/pull/8563                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Versions <2.0.0b1 are vulnerable. Update to a non vulnerable version.
python-safety   critical  werkzeug 0.11.15   The defaults of 'generate_password_hash' in werkzeug 0.12 have been changed to more secure ones.
https://github.com/pallets/werkzeug/pullersions <0.12 are vulnerable. Update to a non vulnerable version.   
python-safety   critical  werkzeug 0.11.15   Werkzeug 0.15.0 refactors class:`~middleware.proxy_fix.ProxyFix` to support more headers, multiple values, and a more secure configurationersions <0.15.0 are vulnerable. Update to a non vulnerable version. 
python-safety   critical  werkzeug 0.11.15   Werkzeug 2.2.3 includes a fix for CVE-2023-25577: Prior to version 2.2.3, Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses 'request.data', 'request.form', 'request.files', or 'request.get_data(parse_form_data=False)', it can cause unexpectedly high resource usage. This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.
https://github.com/pallets/werkzeug/security/advisories/GHSA-xg9f-g7g7-2323  Versions <2.2.3 are vulnerable. Update to a non vulnerable version.  
python-safety   critical  werkzeug 0.11.15   Werkzeug 2.2.3 includes a fix for CVE-2023-23934: Browsers may allow "nameless" cookies that look like '=value' instead of 'key=value'. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like '=__Host-test=bad' for another subdomain. Werkzeug prior to 2.2.3 will parse the cookie '=__Host-test=bad' as __Host-test=bad'. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.
https://github.com/pallets/werkzeug/security/advisories/GHSA-px8h-6qxv-m22q                                                                                                                                                                                                                                                                                                                                                  Versions <2.2.3 are vulnerable. Update to a non vulnerable version.  

